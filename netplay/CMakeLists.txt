CMAKE_MINIMUM_REQUIRED (VERSION 3.2)
PROJECT (netplay)
ENABLE_TESTING ()

IF (NETPLAY_BUILD_WITH_JAVA)
  INCLUDE (UseJava)
ENDIF()

SET (CTEST_OUTPUT_ON_FAILURE ON)

SET (CMAKE_CXX_STANDARD 11)
SET (CMAKE_POSITION_INDEPENDENT_CODE ON)

SET (THREADS_PREFER_PTHREAD_FLAG ON)

SET(
  CMAKE_MODULE_PATH
  ${CMAKE_MODULE_PATH} 
  ${CMAKE_SOURCE_DIR}/cmake/Modules/)

SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/build/lib)
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/build/lib)
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/build/bin)

# ------------------------------------------------------------------------------
# Find GMock and GTest

FIND_PACKAGE (GTest REQUIRED)
FIND_PACKAGE (Glog REQUIRED)
FIND_PACKAGE (GMock REQUIRED)
FIND_PACKAGE (Mupen64 REQUIRED)
FIND_PACKAGE (Protobuf REQUIRED)
FIND_PACKAGE (GRPC REQUIRED)
IF (NETPLAY_BUILD_WITH_JAVA)
  FIND_PACKAGE (Java COMPONENTS Development REQUIRED)
ENDIF()
FIND_PACKAGE (Threads REQUIRED)

INCLUDE_DIRECTORIES (${CMAKE_SOURCE_DIR})
INCLUDE_DIRECTORIES (${GLOG_INCLUDE_DIRS})
INCLUDE_DIRECTORIES (${GTEST_INCLUDE_DIRS})
INCLUDE_DIRECTORIES (${GMOCK_INCLUDE_DIRS})
INCLUDE_DIRECTORIES (${MUPEN64_INCLUDE_DIRS})
INCLUDE_DIRECTORIES (${PROTOBUF_INCLUDE_DIRS})
INCLUDE_DIRECTORIES (${GRPC_INCLUDE_DIRS})

# Find JNI based on the assumption that the java executable is located in 
# ${JAVA_HOME}/bin/java
IF (NETPLAY_BUILD_WITH_JAVA)
  GET_FILENAME_COMPONENT (JAVA_BIN_PATH ${Java_JAVA_EXECUTABLE} DIRECTORY)
  GET_FILENAME_COMPONENT (JAVA_HOME ${JAVA_BIN_PATH}/.. ABSOLUTE)
  FIND_PACKAGE (JNI REQUIRED)
  INCLUDE_DIRECTORIES (${JNI_INCLUDE_DIRS})
  UNSET (JAVA_BIN_PATH)
  UNSET (JAVA_HOME)
ENDIF()

# We only need the GFlags library
FIND_LIBRARY (GFLAGS_LIBRARIES gflags)

# ------------------------------------------------------------------------------
# Declarations and subdirectories

# The proto base directory happens to be the same as the project root, but will 
# not necessarily remain so.
SET (PROTO_BASE_DIR ${CMAKE_SOURCE_DIR})

# Creates generated proto outputs and defines all required libraries
ADD_SUBDIRECTORY (base)

# Builds the client plugin
ADD_SUBDIRECTORY (client)

IF (NETPLAY_BUILD_WITH_JAVA)
  # Builds the Java server
  ADD_SUBDIRECTORY (server)

  # Adds integration tests
  ADD_SUBDIRECTORY (integration_tests)
ENDIF()

# Adds scripts
ADD_SUBDIRECTORY (scripts)
